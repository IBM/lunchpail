{{- define "containers/minio" }}
- name: minio
  image: docker.io/minio/minio:RELEASE.2024-07-04T14-25-45Z
  command:
    - /bin/bash
    - "-c"
    - |
      echo "Starting minio"
      printenv
      minio server ./data &

      # we need to specify --api otherwise mc will probe the given
      # endpoint to auto-detect the api version... but we know the
      # server isn't ready yet. s3v4 is just the stable api version
      # (there were only ever two stable s3 api versions)
      mc config host add lunchpail http://localhost:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD --api s3v4

      while ! mc ready lunchpail; do sleep 1; done
      echo "Server is ready, now waiting for the all done marker"

      # We want to exit when mc watch emits a single line. This is the
      # bash magic to do so. Note the `head -1` -- one single
      # line. This works because `head` SIGPIPE-kills the pipeline
      # when it exits, but if we did the naive `mc watch | head -1`,
      # head would not SIGPIPE until the *next* byte, which... will
      # never appear.
      # ref: https://unix.stackexchange.com/a/404277
      { head -1; kill "$!"; } < <(mc watch lunchpail/$LUNCHPAIL_QUEUE_BUCKET --prefix $LUNCHPAIL_QUEUE_PREFIX/alldone --events put)
      echo "Got all done marker, exiting..."
  env:
    - name: USE_MINIO_EXTENSIONS
      value: "true"
    - name: LUNCHPAIL_QUEUE_BUCKET
      value: {{ .Values.taskqueue.bucket }}
    - name: LUNCHPAIL_QUEUE_PREFIX
      value: {{ .Values.taskqueue.prefix }}
  envFrom:
    - secretRef:
        name: {{ print (.Release.Name | trunc 40) "-lunchpail-minio" }}
  ports:
    - containerPort: 9000
{{- end }}
