{{- define "containers/app" }}
- name: app
  image: {{ .Values.image }}
  command:
    - /bin/sh
    - "-c"
    - |
      trap "/workdir/lunchpail worker prestop" EXIT
      {{ print "/workdir/lunchpail worker run -- " .Values.command }}
  env:
    - name: LUNCHPAIL_QUEUE_PATH
      value: {{ .Values.taskqueue.prefixPath }}
    - name: LUNCHPAIL_STARTUP_DELAY
      value: {{ .Values.startupDelay | default 0 | quote }}
    - name: LUNCHPAIL_POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
  {{- if or .Values.env }}
    {{ .Values.env | b64dec | fromJsonArray | toYaml | nindent 4 }}
  {{- end }}

  {{- if .Values.envFroms }}
  envFrom:
  {{ .Values.envFroms | b64dec | fromJsonArray | toYaml | nindent 2 }}
  {{- end }}

  {{- if .Values.containerSecurityContext }}
  securityContext: {{ .Values.containerSecurityContext | b64dec | fromYaml | toJson }}
  {{- end }}

  {{- include "workdir/path" . | indent 2 }}
  volumeMounts:
    {{- if .Values.volumeMounts }}
    {{- .Values.volumeMounts | b64dec | fromJsonArray | toYaml | nindent 4 }}
    {{- end }}
    {{- include "workdir/volumeMount" . | indent 4 }}
  resources:
    limits:
      {{- if and .Values.cpu (ne (.Values.workers.cpu | quote) "\"auto\"") (ne (.Values.workers.cpu | quote) "0") }}
      cpu: {{ .Values.workers.cpu }}
      {{- end }}
      {{- if and .Values.memory (ne (.Values.workers.memory | quote) "\"auto\"") (ne (.Values.workers.memory | quote) "0") }}
      memory: {{ .Values.workers.memory }}
      {{- end }}
      {{- if and (.Values.workers.gpu) (gt .Values.workers.gpu 0) }}
      nvidia.com/gpu: {{ .Values.workers.gpu }}
      {{- end }}
    requests:
      {{- if and .Values.cpu (ne (.Values.workers.cpu | quote) "\"auto\"") (ne (.Values.workers.cpu | quote) "0") }}
      cpu: {{ .Values.workers.cpu }}
      {{- end }}
      {{- if and .Values.memory (ne (.Values.workers.memory | quote) "\"auto\"") (ne (.Values.workers.memory | quote) "0") }}
      memory: {{ .Values.workers.memory }}
      {{- end }}
      {{- if and (.Values.workers.gpu) (gt .Values.workers.gpu 0) }}
      nvidia.com/gpu: {{ .Values.workers.gpu }}
      {{- end }}
            
  {{- if .Values.rbac.runAsRoot }}
  securityContext:
    privileged: true
  {{- end }}
{{- end }}
