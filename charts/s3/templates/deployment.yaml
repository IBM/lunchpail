apiVersion: v1
kind: Pod
metadata:
  name: {{ print (.Values.name | trunc 50) "-s3" }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: s3
    app.kubernetes.io/name: {{ .Values.name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: lunchpail.io
spec:
  terminationGracePeriodSeconds: 0
  volumes:
    - name: data
      hostPath:
      emptyDir: {}

  containers:
  - name: minio
    image: {{ .Values.minioimage | default "bitnami/minio:2024.5.10" }}
    imagePullPolicy: IfNotPresent
    envFrom:
      - secretRef:
          name: {{ print (.Values.name | trunc 50) "-s3" }}
    command:
      - /bin/bash
      - -c
    args: 
      - "echo 'Cleaning /data' && find /data | wc -l && rm -rf /data/* && rm -rf /data/.minio.sys && find /data && find /data | wc -l && echo 'Starting minio' && MINIO_ROOT_USER=$AWS_ACCESS_KEY_ID MINIO_ROOT_PASSWORD=$AWS_SECRET_ACCESS_KEY minio server /data --console-address :9090"
    ports:
    - containerPort: 9000
#          hostPort: 9000
    - containerPort: 9090
#          hostPort: 9090
    # Mount the volume into the pod
    volumeMounts:
    - name: data # must match the volume name, above
      mountPath: "/data"

    readinessProbe:
      httpGet:
        path: /minio/health/ready
        port: 9000
        scheme: HTTP
      initialDelaySeconds: 1
      periodSeconds: 5
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 5

    livenessProbe:
      httpGet:
        path: /minio/health/live
        port: 9000
        scheme: HTTP
      initialDelaySeconds: 120
      periodSeconds: 30
      timeoutSeconds: 10
      successThreshold: 1
      failureThreshold: 3
