---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: codeflare-run-controller-account
  namespace: {{ .Values.controllers.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: codeflare-run-controller-role-cluster
rules:

  - apiGroups: [mcad.ibm.com]
    resources: [appwrappers]
    verbs: [watch]

  - apiGroups: [""]
    resources: [secrets]
    verbs: [get]

  - apiGroups: [""]
    resources: [configmaps]
    verbs: [list]

    # to find the torchx head pod
  - apiGroups: [""]
    resources: [pods,pods/log]
    verbs: [get, list, delete, watch, patch]

  - apiGroups: [""]
    resources: [pods/status]
    verbs: [patch]

  - apiGroups: [""]
    resources: [pods/log]
    verbs: [get, watch]

  - apiGroups: [rbac.authorization.k8s.io]
    resources: [rolebindings,roles]
    verbs: [get,create,delete]
  - apiGroups: [""]
    resources: [serviceaccounts]
    verbs: [get,create,delete]
    
  - apiGroups: [""]
    resources: [events]
    verbs: [create, list, watch, patch]

  - apiGroups: [""]
    resources: [persistentvolumeclaims]
    verbs: [create, delete]

  - apiGroups: [""]
    resources: [persistentvolumes]
    verbs: [get,create,delete]

  - apiGroups: [ray.io]
    resources: [rayclusters,rayjobs]
    verbs: [list,get,create,delete]

    # hmm, sparkoperator needs a lot...
  - apiGroups: [sparkoperator.k8s.io]
    resources: [sparkapplications]
    verbs: [list,get,create,delete]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["*"]
  - apiGroups: [""]
    resources: ["services"]
    verbs: ["*"]

  - apiGroups: [com.ie.ibm.hpsys]
    resources: [datasets]
    verbs: [get, patch]

  - apiGroups: [codeflare.dev]
    resources: [platformreposecrets,platformimagepullsecrets,runsizeconfigurations]
    verbs: [list]
  - apiGroups: [codeflare.dev]
    resources: [runs/status, workerpools/status, tasksimulators/status]
    verbs: [list, watch, patch, get]
  - apiGroups: [codeflare.dev]
    resources: [applications, queues, runs, workerpools, tasksimulators]
    verbs: [create, list, watch, patch, get]
    
  - apiGroups: [mcad.ibm.com]
    resources: [appwrappers]
    verbs: [create, list, get, delete, patch]

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [clusterkopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: runtime observation of namespaces & CRDs (addition/deletion).
  - apiGroups: [apiextensions.k8s.io]
    resources: [customresourcedefinitions]
    verbs: [list, watch]
  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [kopf.dev]
    resources: [kopfexamples]
    verbs: [list, watch]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: codeflare-run-controller-role-namespaced
  namespace: {{ .Values.controllers.namespace }}
rules:

  - apiGroups: [""]
    resources: [secrets]
    verbs: [get,create]

  - apiGroups: [""]
    resources: [persistentvolumeclaims, events]
    verbs: [create]
    
  - apiGroups: [codeflare.dev]
    resources: [runs, runs/status, applications]
    verbs: [list, watch, patch, get]
    
  - apiGroups: [mcad.ibm.com]
    resources: [appwrappers]
    verbs: [create, list, get, delete, patch]

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [kopf.dev]
    resources: [kopfpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [kopf.dev]
    resources: [kopfexamples]
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: codeflare-run-controller-rolebinding-cluster
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: codeflare-run-controller-role-cluster
subjects:
  - kind: ServiceAccount
    name: codeflare-run-controller-account
    namespace: {{ .Values.controllers.namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: codeflare-run-controller-rolebinding-namespaced
  namespace: {{ .Values.controllers.namespace }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: codeflare-run-controller-role-namespaced
subjects:
  - kind: ServiceAccount
    name: codeflare-run-controller-account
