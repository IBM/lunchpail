apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  # name must match the spec fields below, and be in the form: <plural>.<group>
  name: workdispatchers.codeflare.dev
spec:
  # group name to use for REST API: /apis/<group>/<version>
  group: codeflare.dev
  # list of versions supported by this CustomResourceDefinition
  versions:
    - name: v1alpha1
      # Each version can be enabled/disabled by Served flag.
      served: true
      # One and only one version must be marked as the storage version.
      storage: true
      subresources:
        # enables the status subresource
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              oneOf:
                - required: [run,method,schema,rate] # method=tasksimulator
                - required: [run,method,sweep] # method=parametersweep
                - required: [run,method,repo] # method=helm
                - required: [run,method,application] # method=application
              properties:
                # common fields: [method,run]
                method:
                  type: string
                  enum: [tasksimulator,parametersweep,helm,application]
                run:
                  type: string

                # method=application fields: [application]
                application:
                  type: object
                  oneOf:
                    - required: [name]
                    - required: [fromRole]
                  properties:
                    name:
                      type: string
                    fromRole:
                      type: string
                      enum: [dispatcher]
                    size:
                      type: string
                      enum: [xxs,xs,sm,md,lg,xl,xxl]
                    queue:
                      type: object
                      properties:
                        useas:
                          type: string
                          enum: [configmap,mount]

                # method=helm fields: [repo]
                repo:
                  type: string
                values:
                  type: string
                  description: |
                    Values to pass to the Helm chart (in JSON format)
                env:
                  type: object
                  additionalProperties:
                    type: string

                # method=parametersweep fields: [sweep]
                sweep:
                  type: object
                  required: [min,max,step]
                  properties:
                    min:
                      type: number
                    max:
                      type: number
                    step:
                      type: number

                # method=tasksimulator fields: [schema,rate]
                schema:
                  type: object
                  required: [format, columns, columnTypes]
                  properties:
                    format:
                      type: string
                    columns:
                      type: array
                      items:
                        type: string
                    columnTypes:
                      type: array
                      items:
                        type: string
                        enum:
                          - "null"
                          - number
                          - string
                rate:
                  type: object
                  required: [tasks]
                  properties:
                    tasks:
                      type: number
                    intervalSeconds:
                      type: number

            status:
              type: object
              properties:
                phase:
                  type: string
                  enum:
                    - Pending
                    - Queued
                    - Running
                    - Completed
                    - Failed
                    
      additionalPrinterColumns:
        - name: DataSet
          type: string
          jsonPath: .spec.dataset
        - name: Status
          type: string
          jsonPath: ".metadata.annotations.codeflare\\.dev/status"
        - name: Reason
          type: string
          jsonPath: ".metadata.annotations.codeflare\\.dev/reason"
          priority: 1 # -o wide only
        - name: Message
          type: string
          jsonPath: ".metadata.annotations.codeflare\\.dev/message"
          priority: 1 # -o wide only
        - name: Age
          type: date
          jsonPath: .metadata.creationTimestamp

  # either Namespaced or Cluster
  scope: Namespaced
  names:
    # plural name to be used in the URL: /apis/<group>/<version>/<plural>
    plural: workdispatchers
    # singular name to be used as an alias on the CLI and for display
    singular: workdispatcher
    # kind is normally the CamelCased singular type. Your resource manifests use this.
    kind: WorkDispatcher
    # shortNames allow shorter string to match your resource on the CLI
    shortNames:
    - wd
