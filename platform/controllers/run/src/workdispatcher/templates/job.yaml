{{- define "codeflare.dev/WorkDispatcherJob" }}
apiVersion: v1
kind: Pod
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.namespace }}
  ownerReferences:
    - apiVersion: codeflare.dev/v1alpha1
      controller: true
      kind: WorkDispatcher
      name: {{ .Values.name }}
      uid: {{ .Values.uid }}
  labels:
    app.kubernetes.io/component: workdispatcher
    app.kubernetes.io/part-of: {{ .Values.partOf }} # name of DataSet/TaskQueue we will be populating
    app.kubernetes.io/name: {{ .Values.name }} # name of WorkDispatcher
    app.kubernetes.io/instance: {{ .Release.Name }} # name of this WorkDispatcher impl, i.e. the job/pod
    app.kubernetes.io/managed-by: codeflare.dev
    {{- if .Values.datasets }}
{{ .Values.datasets | b64dec | indent 4 }}
    {{- end }}
spec:
  restartPolicy: OnFailure
  terminationGracePeriodSeconds: 5
  serviceAccountName: {{ .Values.rbac.serviceaccount }}
  containers:
    {{- include "codeflare.dev/containers/dispatcher" . | indent 4 }}

  # shell script from configmap
  volumes:
  - name: script
    configMap:
      name: {{ print .Release.Name "-script" }}
      defaultMode: 0500
{{- end }}
