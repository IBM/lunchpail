import { returnHomeCallback } from "../navigate/home"

import type WatchedKind from "@jay/common/Kind"

import singletonEventHandler from "../events/singleton"
import { allEventsHandler, allTimestampedEventsHandler } from "../events/all"

/** Event handlers */
function handlers(): Record<WatchedKind, (evt: EventLike) => void> {
  const returnHome = returnHomeCallback()

  return {
    applications: singletonEventHandler("applications", setApplicationEvents, returnHome),
    taskqueues: allEventsHandler(setTaskQueueEvents),
    datasets: singletonEventHandler("datasets", setDataSetEvents, returnHome),
    queues: allTimestampedEventsHandler(setQueueEvents),
    workerpools: singletonEventHandler("workerpools", setWorkerPoolEvents, returnHome),
    tasksimulators: singletonEventHandler("tasksimulators", setTaskSimulatorEvents, returnHome),
    platformreposecrets: singletonEventHandler("platformreposecrets", setPlatformRepoSecretEvents, returnHome),
  }
}

export default handlers
