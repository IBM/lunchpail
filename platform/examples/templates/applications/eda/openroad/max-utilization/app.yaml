apiVersion: codeflare.dev/v1alpha1
kind: Application
metadata:
  annotations:
    codeflare.dev/status: Ready
  creationTimestamp: '2023-12-01T18:34:59Z'
  labels:
    app.kubernetes.io/component: openroad-max-util
    app.kubernetes.io/part-of: codeflare.dev
    codeflare.dev/created-by: user
  name: openroad-max-util
  namespace: {{ .Values.namespace }}
spec:
  api: workqueue
  tags: [EDA]
  code: |
    import sys
    import subprocess
    from os import path, remove
    from shutil import move

    in_file = sys.argv[1]
    processing_file = sys.argv[2]
    out_file = sys.argv[3]

    print(f"in_file={in_file}")

    with open(in_file) as f:
        util = int(f.readline())

    print(f"FP util={util}")

    # 0. mark work as underway
    move(in_file, processing_file)

    # 1. Copy experiment template
    mountpath = "/mnt/datasets/openroad-max-util-templates/"
    openroad_flow = path.join(mountpath, "openroad-flow")
    openroad_flow_local = path.join("/tmp", "openroad-flow")
    template = path.join(mountpath, "experiment-template")
    workspace = path.join("/tmp", f"experiment-{util}")
    subprocess.call(f"cp -r {template} {workspace}", shell=True)

    if not path.isdir(openroad_flow_local):
        print("Copying openroad-flow")
        subprocess.call(f"cp -r {openroad_flow} {openroad_flow_local}", shell=True)

    # 2. Change the utilization.
    with open(f"{workspace}/config.mk", 'a') as f:
        f.write("\n# Experiment setup:\n")
        f.write("export CORE_UTILIZATION = {}\n".format(util))

    # 3. Execute the flow
    print(f"Running experiment {util}")
    subprocess.call(f"make DESIGN_CONFIG=./config.mk",
                    cwd=workspace,
                    shell=True)

    subprocess.call(f"cp -r {workspace} {mountpath}", shell=True)

    # 4. mark work as done
    remove(processing_file)

    # 5. TODO register output in out_file

    print(f"FP util {util} -- Done.")

  command: /opt/codeflare/worker/bin/watcher.sh python3 -u literal.py
  description: >-
    Our goal is to find a maximum achivable utilization for a given design.
  image: ghcr.io/project-codeflare/workerpool-worker-ubuntu-python-openroad:0.0.1
  inputs:
    - sizes:
        xs: openroad-max-util-templates
      useas: mount
  supportsGpu: true
